// main grid
.site-header {
  grid-area: site-header;
  grid-column: 1 / -1;
}

.site-nav { grid-area: site-nav; }
.site-footer { grid-area: site-footer; }
.site-content { grid-area: site-content; }

// no grid support
// scss-lint:disable MergeableSelector
.wrapper {
  // Commenting this out seems to work better in edge for wrapper?
  // display: flex;
  // flex-wrap: wrap;
  margin: 0 auto;
}
// scss-lint:enable MergeableSelector

@supports(display: grid ) {
  .wrapper {
    display: grid;
    // scss-lint:disable PropertySpelling
    grid-gap: 10px;
    grid-template-areas: "site-header"
                         "site-nav"
                         "site-content"
                         "site-footer";
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    grid-template-rows: 40px auto auto;
    margin: 0 auto;
  }
}

// Item Grid for use with sketchbooks, zines, drawings, etc...

// flex fallback where no grid support
.item-grid {
  display: flex;
  flex-wrap: wrap;
}

@supports(display: grid ) {
  .item-grid {
    display: grid;
    // scss-lint:disable PropertySpelling
    grid-gap: 10px;
    grid-template-columns: repeat(auto-fill, 48%);
    grid-template-rows: 45px auto;
    margin: 0;
  }

  .item-panel { padding-right: 0; }
}

.item-header,
.item-footer {
  flex: 0 1 100%;
  grid-column: 1 / -1;
}

.item-panel {
  // needed for the flex layout
  flex: 1 1 150px;
  margin-bottom: 1rem;
  padding-right: 10px;
}

.item-panel:last-child { padding-right: 0; }


@media (min-width: 640px) {
  .wrapper {
    // scss-lint:disable PropertySpelling
    grid-template-areas: "site-header"
                         "site-nav"
                         "site-content"
                         "site-footer";
    grid-template-columns: auto;
    grid-template-rows: 40px 45px auto;
    margin: 0 auto;
    max-width: 940px;
  }

  .item-grid {
    // scss-lint:disable PropertySpelling
    grid-template-columns: repeat(auto-fill, 170px);
    margin: 0;
  }
}


// We need to set the margin used on flex items to 0 as we have gaps in grid.
@supports (display: grid) {
  .wrapper > * {
    margin: 0;
  }
}
